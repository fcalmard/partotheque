<?php

namespace oeuvresBundle\Repository;

/**
 * TessituresRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TessituresRepository extends EntityRepository
{

	
	public function ChargeListe()
	{
	
	
		$query = $this->getEntityManager()
		->createQuery(
				'SELECT
				t.id,
				t.active,t.CodeTessiture,	
				t.libelleTessiture,
				t.datecreateAt
				FROM oeuvresBundle:Tessitures t
				WHERE t.active=1 order by t.libelleTessiture'
		);
		
		try {
			return $query->getResult();
		} catch (\Doctrine\ORM\NoResultException $e) {
			return null;
		}
	
	
	}
	
	/**
	 *
	 * @param string $sCode
	 * @return number
	 */
	public function rechercheTessiture($sCode)
	{
		$id=0;
			
		$sCode=$this->epure($sCode);
	
		$sCode=strtoupper($sCode);
	
		$sCode=substr($sCode, 0,10);
	
		$sCode=sprintf("%s",$sCode);
	
		$sql="SELECT
				t.id from oeuvresBundle:Tessitures t
				WHERE t.code = '".$sCode."'";
	
		$query = $this->getEntityManager()
		->createQuery(
				$sql
				);
			
		try {
			$aIds=$query->getResult();
			if(is_array($aIds) && count($aIds)>0)
			{
				foreach ($aIds as $kid=>$id)
				{
					$id=$id['id'];
				}
			}
		} catch (\Doctrine\ORM\NoResultException $e) {
			$id=0;
		}
	
	
		return $id;
	}
	
	/**
	 *
	 */
	public function insertionTessiture($sCode,$sLib)
	{
	
		$idcree=0;
	
		$sLib=$this->epure($sLib);
	
		$sCode=$this->epure($sCode);
		
		$sCode=substr($sCode, 0,10);
	
		$nowUtc = new \DateTime( 'now',  new \DateTimeZone( 'UTC' ) );
	
		$sdate= $nowUtc->format('Y-m-d h:i:s');
	
		$conn=$this->getEntityManager()->getConnection();
	
		$dataArray=array('CodeTessiture'=>$sCode,'libelleTessiture'=>$sLib,'active'=>1
				,'datecreateAt'=>$sdate
		);
	
		try {
			$bOk=$conn->insert('Tessitures', $dataArray);
	
		} catch (\Doctrine\ORM\NoResultException $e) {
			die("Erreur ".$e->getMessage());
		}
	
		$idcree=$conn->lastInsertId();
	
		return $idcree;
	
	}
	
	private function epure($texte)
	{
		
;
		$texte = trim($texte);
		$texte = htmlentities($texte, ENT_NOQUOTES, 'utf-8');
		$texte = preg_replace('#&([A-za-z])(?:acute|cedil|circ|grave|orn|ring|slash|th|tilde|uml);#', '\1', $texte);
		$texte = preg_replace('#&([A-za-z]{2})(?:lig);#', '\1', $texte); // pour les ligatures
		$texte = preg_replace('#&[^;]+;#', '', $texte); // supprime les autres caractères
		$texte = preg_replace('#&[^;]+;#', '', $texte); // supprime les autres caractères
	
		$texte = strtr(
				$texte,
				'@ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÒÓÔÕÖÙÚÛÜÝàáâãäåçèéêëìíîïðòóôõöùúûüýÿ'.CHR(34),
				'aAAAAAACEEEEIIIIOOOOOUUUUYaaaaaaceeeeiiiioooooouuuuyy'.chr(32)
				);
	
		$texte=str_ireplace(chr(34), "", $texte);
		$texte=str_ireplace(chr(39), "", $texte);
		
		return $texte;
	}	
	
}
